# prt-videodownloader-nginx configuration
# Serves static video files from the shared data directory under /videodownloader/data
# In the future, this nginx can also reverse-proxy the API if desired.

server {
    listen 443 ssl;
    http2 on;
    server_name webdav.teevity.com;

    # TLS â€” make sure the cert matches webdav.teevity.com
    ssl_certificate     /etc/letsencrypt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/privkey.pem;

    # Access / error logs (logs sent to stdout/stderr to make them visible via 'docker logs ...')
    access_log /dev/stdout;
    error_log  /dev/stderr warn;


    # Forward everything at "/" to Apache root (no /webdav prefix anymore)
    location /videodownloader/api/ {
        proxy_pass http://prt-videodownloader-api:8080/;   # no trailing /webdav
        proxy_http_version 1.1;

        # Use empty Connection header to avoid adding "close"
        proxy_set_header Connection "";

        # Preserve important headers for DAV and auth
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        # Forward authorization header
        proxy_set_header Authorization $http_authorization;

        # Preserve WebDAV-specific headers intact (Depth, Destination, Overwrite, If)
        proxy_set_header Depth $http_depth;
        proxy_set_header Destination $http_destination;
        proxy_set_header Overwrite $http_overwrite;
        proxy_set_header If $http_if;

        # Keep streaming uploads working (do not buffer request body)
        client_max_body_size 10G;
        proxy_request_buffering off;
        proxy_buffering off;

        # Let upstream handle Expect / TE / chunked transfers
        proxy_set_header Expect $http_expect;
        proxy_set_header TE $http_te;

        # Do not rewrite Location headers from Apache
        proxy_redirect off;
        absolute_redirect off;
    }


    # Serve the shared data directory
    # Using alias so the URL path doesn't map 1:1 to the file system path
    location /videodownloader/data/ {
        # Important: keep the trailing slash
        alias /opt/prt/prt-videodownloader/data/;

        # Allow directory listing to manually find files
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        # Support large file downloads and range requests
        sendfile on;
        tcp_nopush on;
        aio on;

        # Basic CORS for direct file access if needed
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Expose-Headers Content-Length;
        add_header X-Content-Type-Options nosniff;

        # Try exact file; if not found, 404
        try_files $uri =404;
    }


    # Access to the OpenAPI description
    # Important: keep the trailing slash
    location = /videodownloader/openapi.json {
        alias /opt/prt/prt-videodownloader/openapi.json;
        default_type application/json;
    }

    # Health check endpoint (optional)
    location = /healthz {
        add_header Content-Type text/plain;
        return 200 'ok\n';
    }
}
